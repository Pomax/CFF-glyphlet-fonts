<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN">
<html>
  <head>
    <title>The OpenType Font File</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
    <link rel="STYLESHEET" href="otspec.css" type="text/css">
  </head>
  <body>
    <div class="toprule">
    </div>
    <p class="menu">
      <a href="http://www.microsoft.com/typography/default.mspx">Microsoft Typography</a> | <a href="http://www.microsoft.com/typography/creators.htm">Developer...</a> | <a href="default.htm">OpenType specification</a> | The OpenType font file</p>
    <div class="middlerule">
    </div>
    <div class="contents">
      <h1>The OpenType Font File</h1>
      <p>An OpenType font file contains data, in table format, that comprises either a TrueType or a PostScript outline font. Rasterizers use combinations of data from the tables contained in the font to render the TrueType or PostScript glyph outlines. Some of this supporting data is used no matter which outline format is used; some of the supporting data is specific to either TrueType or PostScript.</p>
      <h2>Filenames</h2>
      <p>OpenType fonts may have the extension .OTF or .TTF, depending on the kind of outlines in the font and the creator's desire for compatibility on systems without native OpenType support.</p>
      <ul>
        <li>In all cases, fonts with only CFF data (no TrueType outlines) always have an .OTF extension.</li>
        <li>Fonts containing TrueType outlines may have either .OTF or .TTF, depending on the desire for backward compatibility on older systems or with previous versions of the font. TrueType Collection fonts should have a .TTC extension whether or not the fonts have OpenType layout tables present.</li>
      </ul>
      <h2>Data Types</h2>
      <p>The following data types are used in the OpenType font file. All OpenType fonts use Motorola-style byte ordering (Big Endian):</p>
      <table class="gray">
        <tr>
          <th style="width: 100;">Data Type</th>
          <th style="width: 380;">Description</th>
        </tr>
        <tr>
          <td>BYTE</td>
          <td>8-bit unsigned integer.</td>
        </tr>
        <tr>
          <td>CHAR</td>
          <td>8-bit signed integer.</td>
        </tr>
        <tr>
          <td>USHORT</td>
          <td>16-bit unsigned integer.</td>
        </tr>
        <tr>
          <td>SHORT</td>
          <td>16-bit signed integer.</td>
        </tr>
        <tr>
          <td>UINT24</td>
          <td>24-bit unsigned integer.</td>
        </tr>
        <tr>
          <td>ULONG</td>
          <td>32-bit unsigned integer.</td>
        </tr>
        <tr>
          <td>LONG</td>
          <td>32-bit signed integer.</td>
        </tr>
        <tr>
          <td>Fixed</td>
          <td>32-bit signed fixed-point number (16.16)</td>
        </tr>
        <tr>
          <td>FUNIT</td>
          <td>Smallest measurable distance in the em space.</td>
        </tr>
        <tr>
          <td>FWORD</td>
          <td>16-bit signed integer (SHORT) that describes a quantity in FUnits.</td>
        </tr>
        <tr>
          <td>UFWORD</td>
          <td>16-bit unsigned integer (USHORT) that describes a quantity in FUnits.</td>
        </tr>
        <tr>
          <td>F2DOT14</td>
          <td>16-bit signed fixed number with the low 14 bits of fraction (2.14).</td>
        </tr>
        <tr>
          <td>LONGDATETIME</td>
          <td>Date represented in number of seconds since 12:00 midnight, January 1, 1904. The value is represented as a signed 64-bit integer.</td>
        </tr>
        <tr>
          <td>Tag</td>
          <td>Array of four uint8s (length = 32 bits) used to identify a script, language system, feature, or baseline</td>
        </tr>
        <tr>
          <td>GlyphID</td>
          <td>Glyph index number, same as uint16(length = 16 bits)</td>
        </tr>
        <tr>
          <td>Offset</td>
          <td>Offset to a table, same as uint16 (length = 16 bits), NULL offset = 0x0000</td>
        </tr>
      </table>
      <p>The F2DOT14 format consists of a signed, 2's complement mantissa and an unsigned fraction. To compute the actual value, take the mantissa and add the fraction. Examples of 2.14 values are:</p>
      <table class="gray">
        <tr>
          <th style="width: 100;">Decimal Value</th>
          <th style="width: 130;">Hex Value</th>
          <th style="width: 130;">Mantissa</th>
          <th style="width: 120;">Fraction</th>
        </tr>
        <tr>
          <td>1.999939</td>
          <td>0x7fff</td>
          <td>1</td>
          <td>16383/16384</td>
        </tr>
        <tr>
          <td>1.75</td>
          <td>0x7000</td>
          <td>1</td>
          <td>12288/16384</td>
        </tr>
        <tr>
          <td>0.000061</td>
          <td>0x0001</td>
          <td>0</td>
          <td>1/16384</td>
        </tr>
        <tr>
          <td>0.0</td>
          <td>0x0000</td>
          <td>0</td>
          <td>0/16384</td>
        </tr>
        <tr>
          <td>-0.000061</td>
          <td>0xffff</td>
          <td>-1</td>
          <td>16383/16384</td>
        </tr>
        <tr>
          <td>-2.0</td>
          <td>0x8000</td>
          <td>-2</td>
          <td>0/16384</td>
        </tr>
      </table>
      <h2>Version Numbers</h2>
      <p>Most tables have version numbers, and the version number for the entire font is contained in the Table Directory. Note that there are two different table version number types, each with its own numbering scheme. USHORT version numbers always start at zero (0). Fixed version numbers start at one (1.0 or 0x00010000), except where noted (EBDT, EBLC and EBSC tables).</p>
      <p>Implementations reading tables must include code to check version numbers so that if and when the format and therefore the version number changes, older implementations will reject newer versions gracefully, if the changes are incompatible.</p>
      <p>When a Fixed number is used as a version, the upper 16 bits comprise a major version number, and the lower 16 bits a minor. Tables with non-zero minor version numbers always specify the literal value of the version number since the normal representation of Fixed numbers is not necessarily followed. For example, the version number of 'maxp' table version 0.5 is 0x00005000, and that of 'vhea' table version 1.1 is 0x00011000. If an implementation understands a major version number, then it can safely proceed reading the table. The minor version number indicates extensions to the format that are undetectable by implementations that do not support them.</p>
      <p>The only exception to this is the Offset Table's sfnt version. This serves solely to identify whether the OpenType font contains TrueType outlines (a value of 1.0) or CFF data (the tag 'OTTO'), as described in the section below, 'Organization of an OpenType font.'</p>
      <p>When a USHORT number is used to indicate version, it should be treated as though it were a minor version number; i.e., all format changes are compatible extensions.</p>
      <h2>Organization of an OpenType Font</h2>
      <p>A key characteristic of the OpenType format is the TrueType sfnt &ldquo;wrapper&rdquo;, which provides organization for a collection of tables in a general and extensible manner.</p>
      <p>The OpenType font with the Offset Table. If the font file contains only one font, the Offset Table will begin at byte 0 of the file. If the font file is a TrueType collection, the beginning point of the Offset Table for each font is indicated in the TTCHeader.</p>
      <table class="gray">
        <caption>Offset Table</caption>
        <tr>
          <th style="width: 100;">Type</th>
          <th style="width: 100;">Name</th>
          <th style="width: 280;">Description</th>
        </tr>
        <tr>
          <td>Fixed</td>
          <td>sfnt version</td>
          <td>0x00010000 for version 1.0.</td>
        </tr>
        <tr>
          <td>USHORT</td>
          <td>numTables</td>
          <td>Number of tables.</td>
        </tr>
        <tr>
          <td>USHORT</td>
          <td>searchRange</td>
          <td>(Maximum power of 2 &lt;= numTables) x 16.</td>
        </tr>
        <tr>
          <td>USHORT</td>
          <td>entrySelector</td>
          <td>Log2(maximum power of 2 &lt;= numTables).</td>
        </tr>
        <tr>
          <td>USHORT</td>
          <td>rangeShift</td>
          <td>NumTables x 16-searchRange.</td>
        </tr>
      </table>
      <p>OpenType fonts that contain TrueType outlines should use the value of 1.0 for the sfnt version. OpenType fonts containing CFF data should use the tag 'OTTO' as the sfnt version number.</p>
      <blockquote>
        <p>NOTE: The Apple specification for TrueType fonts allows for 'true' and 'typ1' for sfnt version. These version tags should not be used for fonts which contain OpenType tables.</p>
      </blockquote>
      <p>The Offset Table is followed immediately by the Table Record entries. Entries in the Table Record must be sorted in ascending order by tag. Offset values in the Table Record are measured from the start of the font file.</p>
      <table class="gray">
        <caption>Table Record</caption>
        <tr>
          <th style="width: 100;">Type</th>
          <th style="width: 100;">Name</th>
          <th style="width: 280;">Description</th>
        </tr>
        <tr>
          <td>ULONG</td>
          <td>tag</td>
          <td>4 -byte identifier.</td>
        </tr>
        <tr>
          <td>ULONG</td>
          <td>checkSum</td>
          <td>CheckSum for this table.</td>
        </tr>
        <tr>
          <td>ULONG</td>
          <td>offset</td>
          <td>Offset from beginning of TrueType font file.</td>
        </tr>
        <tr>
          <td>ULONG</td>
          <td>length</td>
          <td>Length of this table.</td>
        </tr>
      </table>
      <p>The Table Record makes it possible for a given font to contain only those tables it actually needs. As a result there is no standard value for numTables.</p>
      <p>Tags are the names given to tables in the OpenType font file. All tag names consist of four characters. Names with less than four letters are allowed if followed by the necessary trailing spaces. All tag names defined within a font (e.g., table names, feature tags, language tags) must be built from printing characters represented by ASCII values 32-126.</p>
      <h3>Calculating Checksums</h3>
      <p>Table checksums are the unsigned sum of the longs of a given table. In C, the following function can be used to determine a checksum:</p>
      <pre>ULONG
CalcTableChecksum(ULONG *Table, ULONG Length)
{
ULONG Sum = 0L;
ULONG *Endptr = Table+((Length+3) &amp; ~3) / sizeof(ULONG);
while (Table &lt; EndPtr)
	Sum += *Table++;
return Sum;
}
</pre>
      <p>
        <i>Note: This function implies that the length of a table must be a multiple of four bytes. In fact, a font is not considered structurally proper without the correct padding. All tables must begin on four byte boundries, and any remaining space between tables is padded with zeros. The length of all tables should be recorded in the table record with their actual length (not their padded length).</i>
      </p>
      <p>To calculate the checkSum for the 'head' table which itself includes the checkSumAdjustment entry for the entire font, do the following:</p>
      <ol>
        <li>Set the checkSumAdjustment to 0.</li>
        <li>Calculate the checksum for all the tables including the 'head' table and enter that value into the table directory.</li>
        <li>Calculate the checksum for the entire font.</li>
        <li>Subtract that value from the hex value B1B0AFBA.</li>
        <li>Store the result in checkSumAdjustment.</li>
      </ol>
      <p>The checkSum for the head table which includes the checkSumAdjustment entry for the entire font is now incorrect. That is not a problem. Do not change it. An application attempting to verify that the 'head' table has not changed should calculate the checkSum for that table by not including the checkSumAdjustment value, and compare the result with the entry in the table directory. <br></p>
      <h2>TrueType Collections</h2>
      <p>A TrueType Collection (TTC) is a means of delivering multiple OpenType fonts in a single file structure. TrueType Collections are most useful when the fonts to be delivered together share many glyphs in common. By allowing multiple fonts to share glyph sets, TTCs can result in a significant saving of file space.</p>
      <p>For example, a group of Japanese fonts may each have their own designs for the kana glyphs, but share identical designs for the kanji. With ordinary OpenType font files, the only way to include the common kanji glyphs is to copy their glyph data into each font. Since the kanji represent much more data than the kana, this results in a great deal of wasteful duplication of glyph data. TTCs were defined to solve this problem.</p>
      <p>The CFF rasterizer does not currently support TTC files.</p>
      <h3>The TTC File Structure</h3>
      <p>A TrueType Collection file consists of a single TTC Header table, one or more Offset Tables with Table Directories, and a number of OpenType tables. The TTC Header must be located at the beginning of the TTC file.</p>
      <p>The TTC file must contain a complete Offset Table and Table Directory for each font. A TTC file Table Directory has exactly the same format as a TTF file Table Directory. The table offsets in all Table Directories within a TTC file are measured from the beginning of the TTC file.</p>
      <p>Each OpenType table in a TTC file is referenced through the Offset Table and Table Directory of each font which uses that table. Some of the OpenType tables must appear multiple times, once for each font included in the TTC; while other tables may be shared by multiple fonts in the TTC.</p>
      <p>As an example, consider a TTC file which combines two Japanese fonts (Font1 and Font2). The fonts have different kana designs (Kana1 and Kana2) but use the same design for kanji. The TTC file contains a single 'glyf' table which includes both designs of kana together with the kanji; both fonts' Table Directories point to this 'glyf' table. But each font's Table Directory points to a different 'cmap' table, which identifies the glyph set to use. Font1's 'cmap' table points to the Kana1 region of the 'loca' and 'glyf' tables for kana glyphs, and to the kanji region for the kanji. Font2's 'cmap' table points to the Kana2 region of the 'loca' and 'glyf' tables for kana glyphs, and to the same kanji region for the kanji.</p>
      <p>The tables that should have a unique copy per font are those that are used by the system in identifying the font and its character mapping, including 'cmap', 'name', and 'OS/2'. The tables that should be shared by fonts in the TTC are those that define glyph and instruction data or use glyph indices to access data: 'glyf', 'loca', 'hmtx', 'hdmx', 'LTSH', 'cvt ', 'fpgm', 'prep', 'EBLC', 'EBDT', 'EBSC', 'maxp', and so on. In practice, any tables which have identical data for two or more fonts may be shared.</p>
      <p>A tool is available from Microsoft to help build .TTC files. The process involves paying close attention the issue of glyph renumbering in a font and the side effects that can result, in the 'cmap' table and elsewhere. The fonts to be merged must also have compatible TrueType instructions-that is, their preprograms, function definitions, and control values must not conflict.</p>
      <p>TrueType Collection files use the filename suffix .TTC.</p>
      <h3>TTC Header</h3>
      <p>There are two versions of the TTC Header: Version 1.0 has been used for TTC files without digital signatures. Version 2.0 can be used for TTC files with <i>or</i> without digital signatures -- if there's no signature, then the last three fields of the version 2.0 header are left null.</p>
      <p>If a digital signature is used, the DSIG table for the file must be the last table in the TTC file. Signatures in a TTC file are expected to be Format 1 signatures.</p>
      <p>The purpose of the TTC Header table is to locate the different Offset Tables within a TTC file. The TTC Header is located at the beginning of the TTC file (offset = 0). It consists of an identification tag, a version number, a count of the number of OpenType fonts in the file, and an array of offsets to each Offset Table.</p>
      <table class="gray">
        <caption>TTC Header Version 1.0</caption>
        <tr>
          <th style="width: 100;">Type</th>
          <th style="width: 100;">Name</th>
          <th style="width: 280;">Description</th>
        </tr>
        <tr>
          <td>TAG</td>
          <td>TTCTag</td>
          <td>TrueType Collection ID string: 'ttcf'</td>
        </tr>
        <tr>
          <td>FIXED</td>
          <td>Version</td>
          <td>Version of the TTC Header (1.0), 0x00010000</td>
        </tr>
        <tr>
          <td>ULONG</td>
          <td>numFonts</td>
          <td>Number of fonts in TTC</td>
        </tr>
        <tr>
          <td>ULONG</td>
          <td>OffsetTable[numFonts]</td>
          <td>Array of offsets to the OffsetTable for each font from the beginning of the file</td>
        </tr>
      </table>
      <table class="gray">
        <caption>TTC Header Version 2.0</caption>
        <tr>
          <th style="width: 100;">Type</th>
          <th style="width: 100;">Name</th>
          <th style="width: 280;">Description</th>
        </tr>
        <tr>
          <td>TAG</td>
          <td>TTCTag</td>
          <td>TrueType Collection ID string: 'ttcf'</td>
        </tr>
        <tr>
          <td>FIXED</td>
          <td>Version</td>
          <td>Version of the TTC Header (2.0), 0x00020000</td>
        </tr>
        <tr>
          <td>ULONG</td>
          <td>numFonts</td>
          <td>Number of fonts in TTC</td>
        </tr>
        <tr>
          <td>ULONG</td>
          <td>OffsetTable[numFonts]</td>
          <td>Array of offsets to the OffsetTable for each font from the beginning of the file</td>
        </tr>
        <tr>
          <td>ULONG</td>
          <td>ulDsigTag</td>
          <td>Tag indicating that a DSIG table exists, 0x44534947 ('DSIG') (null if no signature)</td>
        </tr>
        <tr>
          <td>ULONG</td>
          <td>ulDsigLength</td>
          <td>The length (in bytes) of the DSIG table (null if no signature)</td>
        </tr>
        <tr>
          <td>ULONG</td>
          <td>ulDsigOffset</td>
          <td>The offset (in bytes) of the DSIG table from the beginning of the TTC file (null if no signature)</td>
        </tr>
      </table>
      <h2>Font Tables</h2>
      <p>The rasterizer has a much easier time traversing tables if they are padded so that each table begins on a 4-byte boundary. It is highly recommended that all tables be long-aligned and padded with zeroes.</p>
      <A NAME="otttables"><h1>OpenType Tables</h1></A>
      <p>Whether TrueType or PostScript outlines are used in an OpenType font, the following tables are required for the font to function correctly:</p>
      <h2>Required Tables</h2>
      <table class="gray">
        <tr>
          <th style="width: 100;">Tag</th>
          <th style="width: 360;">Name</th>
        </tr>
        <tr>
          <td>
            <a href="cmap.htm">cmap</a>
          </td>
          <td>Character to glyph mapping</td>
        </tr>
        <tr>
          <td>
            <a href="head.htm">head</a>
          </td>
          <td>Font header</td>
        </tr>
        <tr>
          <td>
            <a href="hhea.htm">hhea</a>
          </td>
          <td>Horizontal header</td>
        </tr>
        <tr>
          <td>
            <a href="hmtx.htm">hmtx</a>
          </td>
          <td>Horizontal metrics</td>
        </tr>
        <tr>
          <td>
            <a href="maxp.htm">maxp</a>
          </td>
          <td>Maximum profile</td>
        </tr>
        <tr>
          <td>
            <a href="name.htm">name</a>
          </td>
          <td>Naming table</td>
        </tr>
        <tr>
          <td>
            <a href="os2.htm">OS/2</a>
          </td>
          <td>OS/2 and Windows specific metrics</td>
        </tr>
        <tr>
          <td>
            <a href="post.htm">post</a>
          </td>
          <td>PostScript information</td>
        </tr>
      </table>
      <p>For OpenType fonts based on TrueType outlines, the following tables are used:</p>
      <h2>Tables Related to TrueType Outlines</h2>
      <table class="gray">
        <tr>
          <th style="width: 100;">Tag</th>
          <th style="width: 360;">Name</th>
        </tr>
        <tr>
          <td>
            <a href="cvt.htm">cvt</a>
          </td>
          <td>Control Value Table</td>
        </tr>
        <tr>
          <td>
            <a href="fpgm.htm">fpgm</a>
          </td>
          <td>Font program</td>
        </tr>
        <tr>
          <td>
            <a href="glyf.htm">glyf</a>
          </td>
          <td>Glyph data</td>
        </tr>
        <tr>
          <td>
            <a href="loca.htm">loca</a>
          </td>
          <td>Index to location</td>
        </tr>
        <tr>
          <td>
            <a href="prep.htm">prep</a>
          </td>
          <td>CVT Program</td>
        </tr>
      </table>
      <p>The PostScript font extensions define a new set of tables containing data specific to PostScript fonts that are used instead of the tables listed above.</p>
      <h2>Tables Related to PostScript Outlines</h2>
      <table class="gray">
        <tr>
          <th style="width: 100;">Tag</th>
          <th style="width: 360;">Name</th>
        </tr>
        <tr>
          <td>
            <a href="cff.htm">CFF</a>
          </td>
          <td>PostScript font program (compact font format)</td>
        </tr>
        <tr>
          <td>
            <a href="vorg.htm">VORG</a>
          </td>
          <td>Vertical Origin</td>
        </tr>
      </table>
      <p>It is strongly recommended that CFF OpenType fonts that are used for vertical writing include a <a href="vorg.htm"> Vertical Origin ('VORG') table</a>. Multiple Master support in OpenType, has been discontinued as of version 1.3 of the specification. The 'fvar', 'MMSD', 'MMFX' tables have hence been removed.</p>
      <h2>Tables Related to Bitmap Glyphs</h2>
      <table class="gray">
        <tr>
          <th style="width: 100;">Tag</th>
          <th style="width: 360;">Name</th>
        </tr>
        <tr>
          <td>
            <a href="ebdt.htm">EBDT</a>
          </td>
          <td>Embedded bitmap data</td>
        </tr>
        <tr>
          <td>
            <a href="eblc.htm">EBLC</a>
          </td>
          <td>Embedded bitmap location data</td>
        </tr>
        <tr>
          <td>
            <a href="ebsc.htm">EBSC</a>
          </td>
          <td>Embedded bitmap scaling data</td>
        </tr>
      </table>
      <p>OpenType fonts may also contain bitmaps of glyphs, in addition to outlines. Hand-tuned bitmaps are especially useful in OpenType fonts for representing complex glyphs at very small sizes. If a bitmap for a particular size is provided in a font, it will be used by the system instead of the outline when rendering the glyph. (Note: ATM does not currently support hinted bitmaps in OpenType fonts.) <br></p>
      <p>There are also several optional tables that support vertical layout as well as other advanced typographic functions:</p>
      <h2>Advanced Typographic Tables</h2>
      <table class="gray">
        <tr>
          <th style="width: 100;">Tag</th>
          <th style="width: 360;">Name</th>
        </tr>
        <tr>
          <td>
            <a href="base.htm">BASE</a>
          </td>
          <td>Baseline data</td>
        </tr>
        <tr>
          <td>
            <a href="gdef.htm">GDEF</a>
          </td>
          <td>Glyph definition data</td>
        </tr>
        <tr>
          <td>
            <a href="gpos.htm">GPOS</a>
          </td>
          <td>Glyph positioning data</td>
        </tr>
        <tr>
          <td>
            <a href="gsub.htm">GSUB</a>
          </td>
          <td>Glyph substitution data</td>
        </tr>
        <tr>
          <td>
            <a href="jstf.htm">JSTF</a>
          </td>
          <td>Justification data</td>
        </tr>
      </table>
      <p>For information on common table formats, please see <a href="chapter2.htm">OpenType Layout Common Table Formats </a>.</p>
      <h2>Other OpenType Tables</h2>
      <table class="gray">
        <tr>
          <th style="width: 100;">Tag</th>
          <th style="width: 360;">Name</th>
        </tr>
        <tr>
          <td>
            <a href="dsig.htm">DSIG</a>
          </td>
          <td>Digital signature</td>
        </tr>
        <tr>
          <td>
            <a href="gasp.htm">gasp</a>
          </td>
          <td>Grid-fitting/Scan-conversion</td>
        </tr>
        <tr>
          <td>
            <a href="hdmx.htm">hdmx</a>
          </td>
          <td>Horizontal device metrics</td>
        </tr>
        <tr>
          <td>
            <a href="kern.htm">kern</a>
          </td>
          <td>Kerning</td>
        </tr>
        <tr>
          <td>
            <a href="ltsh.htm">LTSH</a>
          </td>
          <td>Linear threshold data</td>
        </tr>
        <tr>
          <td>
            <a href="pclt.htm">PCLT</a>
          </td>
          <td>PCL 5 data</td>
        </tr>
        <tr>
          <td>
            <a href="vdmx.htm">VDMX</a>
          </td>
          <td>Vertical device metrics</td>
        </tr>
        <tr>
          <td>
            <a href="vhea.htm">vhea</a>
          </td>
          <td>Vertical Metrics header</td>
        </tr>
        <tr>
          <td>
            <a href="vmtx.htm">vmtx</a>
          </td>
          <td>Vertical Metrics</td>
        </tr>
      </table>
      <hr class="separator">
      <p class="fineprint">This page was last updated 5 May 2008.</p>
      <p class="fineprint">&copy; 2008 Microsoft Corporation. All rights reserved. <a href="http://www.microsoft.com/Misc/cpyright.htm">Terms of use</a>.</p>
      <p class="fineprint">Comments to the MST group: <a href="/typography/AboutMST.mspx">how to contact us</a>.</p>
    </div>
    <div class="middlerule">
    </div>
    <p class="menu">
      <a href="http://www.microsoft.com/typography/default.mspx">Microsoft Typography</a> | <a href="http://www.microsoft.com/typography/creators.htm">Developer...</a> | <a href="default.htm">OpenType...</a> | The OpenType font file</p>
    <div class="bottomrule">
    </div>
  </body>
</html>
